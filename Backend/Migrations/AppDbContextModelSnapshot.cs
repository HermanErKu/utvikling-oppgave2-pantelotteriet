// <auto-generated />
using System;
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.Pant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PantAmount")
                        .HasColumnType("integer");

                    b.Property<int>("PantemaskinId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PantemaskinId");

                    b.HasIndex("UserId");

                    b.ToTable("PantedItems");
                });

            modelBuilder.Entity("Backend.Models.Pantelotteri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DrawDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("WinnerUserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WinnerUserId");

                    b.ToTable("Pantelotterier");
                });

            modelBuilder.Entity("Backend.Models.PantelotteriLodd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Barcode")
                        .HasColumnType("integer");

                    b.Property<int>("LotteriId")
                        .HasColumnType("integer");

                    b.Property<int>("PantId")
                        .HasColumnType("integer");

                    b.Property<int>("PantemaskinId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LotteriId");

                    b.HasIndex("PantId");

                    b.HasIndex("PantemaskinId");

                    b.HasIndex("UserId");

                    b.ToTable("LotteryTickets");
                });

            modelBuilder.Entity("Backend.Models.Pantemaskin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Area")
                        .HasColumnType("integer");

                    b.Property<int>("CurrentPant")
                        .HasColumnType("integer");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MaxPant")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Pantemaskiner");
                });

            modelBuilder.Entity("Backend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Backend.Models.Pant", b =>
                {
                    b.HasOne("Backend.Models.Pantemaskin", "Pantemaskin")
                        .WithMany("PantedItems")
                        .HasForeignKey("PantemaskinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.User", "User")
                        .WithMany("PantedItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pantemaskin");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Backend.Models.Pantelotteri", b =>
                {
                    b.HasOne("Backend.Models.User", "Winner")
                        .WithMany("WonLotteries")
                        .HasForeignKey("WinnerUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Winner");
                });

            modelBuilder.Entity("Backend.Models.PantelotteriLodd", b =>
                {
                    b.HasOne("Backend.Models.Pantelotteri", "Lotteri")
                        .WithMany("Tickets")
                        .HasForeignKey("LotteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.Pant", "Pant")
                        .WithMany("Lodd")
                        .HasForeignKey("PantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.Pantemaskin", "Pantemaskin")
                        .WithMany("Lodd")
                        .HasForeignKey("PantemaskinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.User", "User")
                        .WithMany("LotteryTickets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lotteri");

                    b.Navigation("Pant");

                    b.Navigation("Pantemaskin");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Backend.Models.Pant", b =>
                {
                    b.Navigation("Lodd");
                });

            modelBuilder.Entity("Backend.Models.Pantelotteri", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Backend.Models.Pantemaskin", b =>
                {
                    b.Navigation("Lodd");

                    b.Navigation("PantedItems");
                });

            modelBuilder.Entity("Backend.Models.User", b =>
                {
                    b.Navigation("LotteryTickets");

                    b.Navigation("PantedItems");

                    b.Navigation("WonLotteries");
                });
#pragma warning restore 612, 618
        }
    }
}
